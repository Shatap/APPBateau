#include "Beacon.h"
#include "Client.h"
#include "Server.h"

#include <vector>
#include <thread>

using namespace std;

void threadServerListenBeacon(Server server)
{
    server.listenBeacon();
}

void threadServerListenClient(Server server)
{
    server.listenClient();
}

void threadConnectionClient(Client client)
{
    client.makeRequestToServer();
}

void threadBeaconUpdate(Beacon beacon)
{
    while(true)
    {
        beacon.update();
        beacon.sendToServer();
        this_thread::sleep_for((chrono::seconds)5);
    }
}


int main()
{
    char* serviceBeacon = (char*)"1998";
    char* serviceClient = (char*)"1997";

    Beacon Marc("Trenaudon", 0, 10, 10, 20, NORTH, (char*)"localhost", serviceBeacon);
    Beacon Pan("Joliax", 1, 20, 20, 20, NORTH_EAST, (char*)"localhost", serviceBeacon);

    vector<thread> vectorThreads;
    vector<Beacon> vectorBeacon{Marc,Pan};

    Server server(serviceBeacon, serviceClient);
    vectorThreads.push_back(thread(threadServerListenBeacon, server));
    vectorThreads.push_back(thread(threadServerListenClient, server));


    Client client((char*)"localhost", serviceClient);
    vectorThreads.push_back(thread(threadConnectionClient, client));

    for(Beacon b : vectorBeacon)
        vectorThreads.push_back(thread(threadBeaconUpdate, b));


    for(unsigned int i = 0; i < vectorThreads.size(); ++i)
        if(vectorThreads[i].joinable())
            vectorThreads[i].join();


}

